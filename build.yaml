#targets:
#  $default:
#    builders:
#      repo_generation:
#        enabled: true
#
#builders:
#  repo_generation:
##    target: ":repo_generation"
#    import: "package:repo_generation/builder.dart"
#    builder_factories: [ "subclassGen", "extGen" ]
#    build_extensions: { ".dart": [ ".g.dart" ] }
#    auto_apply: dependents
#    build_to: cache
#    applies_builders: ["source_gen|combining_builder"]



targets:
  $default:
    builders:
      repo_generation:
        enabled: true

builders:
  floor_generator:
    import: "package:repo_generation/builder.dart"
    # The builder function name, which gets called on build/watch
    builder_factories: ["subclassGen"]
    # The 'partId' argument to 'SharedPartBuilder' is 'floor'
    build_extensions: {".dart": [".g.part"]}
    # Apply the Builder to the package with a direct dependency on the package exposing the builder
    auto_apply: dependents
    build_to: cache
    # To copy the '.g.dart' content into '.g.dart' in the source tree
    # Combine the output of multiple builders into one output (combining_builder)
    applies_builders: ["source_gen|combining_builder"]
